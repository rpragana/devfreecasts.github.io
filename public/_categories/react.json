{
  "index": {
    "name": "react",
    "subtitle": "React",
    "about": "A JavaScript library for building User Interfaces. Lots of people use React as the V in MVC. Since React makes no assumptions about the rest of your technology stack, it's easy to try it out on a small feature in an existing project.",
    "site": "http://facebook.github.io/react",
    "image": "react.jpg",
    "description": "Watch screencasts over a list with the best free videos about React UI framework.",
    "videos": [
      {
        "title": "Higher Order Components",
        "description": "Higher Order Components are a very useful way to create behaviour that can be reused in different components. In this episode you will learn how to create a HOC and use for changing props and hijacking the render of the wrapped component.",
        "duration": "9:40",
        "level": "i",
        "published_at": "20161128",
        "url": "https://www.youtube.com/watch?v=LTunyI2Oyzw",
        "site": "ReactCasts",
        "site_url": "https://www.youtube.com/c/reactcasts",
        "lang": "en"
      },
      {
        "title": "Function as Child Components",
        "description": "Function as Child Components is a pattern to reuse common functionalities across your components.",
        "duration": "5:53",
        "level": "i",
        "published_at": "20161128",
        "url": "https://www.youtube.com/watch?v=WE3XAt9P8Ek",
        "site": "ReactCasts",
        "site_url": "https://www.youtube.com/c/reactcasts",
        "lang": "en"
      },
      {
        "title": "React's Children API",
        "description": "React's Children is a top level API that provides utilities for dealing with “props.children”. It can be used by parent components in a composition to transform and manipulate how it's children get's rendered.",
        "duration": "8:05",
        "level": "i",
        "published_at": "20161128",
        "url": "https://www.youtube.com/watch?v=DJ53-G8EbxE",
        "site": "ReactCasts",
        "site_url": "https://www.youtube.com/c/reactcasts",
        "lang": "en"
      },
      {
        "title": "Context - Part 1",
        "description": "Context makes it possible to pass data through the component hierarchy, without needing intermediate components to know about it.",
        "duration": "7:24",
        "level": "i",
        "published_at": "20161128",
        "url": "https://www.youtube.com/watch?v=lxq938kqIss",
        "site": "ReactCasts",
        "site_url": "https://www.youtube.com/c/reactcasts",
        "lang": "en"
      },
      {
        "title": "Context - Part 2 ",
        "description": "Context Part 2 shows how to use Higher-Order-Components and subscriptions to use React's Context safely.",
        "duration": "9:50",
        "level": "i",
        "published_at": "20161128",
        "url": "https://www.youtube.com/watch?v=mwYHDXS6uSc",
        "site": "ReactCasts",
        "site_url": "https://www.youtube.com/c/reactcasts",
        "lang": "en"
      },
      {
        "title": "What's new and different in React v0.12.0",
        "description": "React has changed a bit in version 0.12.0. Let's take a look at what is different. You may need to update some code!",
        "duration": "3:42",
        "level": "i",
        "url": "https://egghead.io/lessons/react-what-s-new-and-different-in-react-v0-12-0",
        "published_at": "20150302",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Using TweenMax with React",
        "description": "React's use of the VirtualDOM can make it confusing on how to get actual elements to use in animation libraries like TweenMax. This video shows how to use this.getDOMNode() and this.refs and hook them in to TweenMax to satisfy all of your advanced animation needs.",
        "duration": "3:16",
        "level": "i",
        "url": "https://egghead.io/lessons/react-using-tweenmax-with-react",
        "published_at": "20150302",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Reflux - Creating your first Action in React",
        "description": "Reflux uses Actions to tell the Stores when to update. We will wire Actions and Stores together to create a simple updatable age field React component.",
        "duration": "2:45",
        "level": "i",
        "url": "https://egghead.io/lessons/react-reflux-creating-your-first-action-in-react",
        "published_at": "20150302",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Setting up a React Playground Dev Environment",
        "description": "When exploring a new framework or technology, it is nice to have a seed project or sandbox so you can just get in and start playing. Let's build our React playground using npm, browserify, 6to5, and more within WebStorm!",
        "duration": "",
        "level": "i",
        "url": "https://egghead.io/lessons/react-setting-up-a-react-sandbox-playground",
        "published_at": "20150302",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Thinking in React",
        "description": "We build a sample app in the Facebook view library, following along with their 'Thinking in React' guide.",
        "duration": "15:15",
        "level": "b",
        "url": "http://tagtree.tv/thinking-in-react",
        "published_at": "20150213",
        "site" : "TagTree",
        "site_url": "http://tagtree.tv",
        "image": "tagtree.jpg",
        "lang": "en"
      },
      {
        "title": "Hello World - First Component",
        "description": "This is the first lesson in a series of lessons that take a look at the core fundamentals of UI development with React. Hello world.",
        "duration": "1:55",
        "level": "b",
        "url": "https://egghead.io/lessons/react-hello-world-first-component",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "The Render Method",
        "description": "The render method is where the magic happens in your React components. This lesson will introduce you to this method and its use.",
        "duration": "1:44",
        "level": "b",
        "url": "https://egghead.io/lessons/react-the-render-method",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Introduction to Properties",
        "description": "This lesson will teach you the basics of setting properties in your React components.",
        "duration": "2:36",
        "level": "b",
        "url": "https://egghead.io/lessons/react-introduction-to-properties",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Owner Ownee Relationship",
        "description": "The owner-ownee relationship is used to designate a parent-child relationship with React components as it differs from the DOM relationship.",
        "duration": "1:42",
        "level": "i",
        "url": "https://egghead.io/lessons/react-owner-ownee-relationship",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Using Refs to Access Components",
        "description": "When you are using React components you need to be able to access specific references to individual components. This is done by defining a ref.",
        "duration": "4:40",
        "level": "i",
        "url": "https://egghead.io/lessons/react-using-refs-to-access-components",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Composable Components",
        "description": "To make more composable React components, you can define common APIs for similar component types.",
        "duration": "5:34",
        "level": "i",
        "url": "https://egghead.io/lessons/react-composable-components",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "State Basics",
        "description": "State is used for properties on a component that will change, versus static properties that are passed in. This lesson will introduce you to taking input within your React components.",
        "duration": "1:55",
        "level": "i",
        "url": "https://egghead.io/lessons/react-state-basics",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Flux Components/Views",
        "description": "In Flux our Components are referred to as Views, but they are the same familiar Components associated with any React development.",
        "duration": "9:22",
        "level": "a",
        "url": "https://egghead.io/lessons/react-flux-components-views",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Flux Stores",
        "description": "Stores are where the real work in our application is done. Dispatchers broadcast Actions to all Stores, and the Stores registered to listen for those Actions will perform any logic needed to update our Views.",
        "duration": "5:53",
        "level": "a",
        "url": "https://egghead.io/lessons/react-flux-stores",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Flux Actions",
        "description": "Actions contain no functionality, but rather describe an event in our application. In this lesson we will describe our Actions as they relate to our application. These Actions will then be available for triggering in our Views and for execution in our Store.",
        "duration": "3:41",
        "level": "a",
        "url": "https://egghead.io/lessons/react-actions",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Flux Overview and Dispatchers",
        "description": "In this lesson we will start by creating our Dispatcher which queues up our Actions as Promises and executes them as they are received.",
        "duration": "5:48",
        "level": "a",
        "url": "https://egghead.io/lessons/react-flux-overview-and-dispatchers",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Flux Development Environment Setup",
        "description": "Our build process during this series will utilize both gulp and browserify. In this lesson we will take a moment to setup our environment and all of the tooling required to begin developing our Flux Application.",
        "duration": "6:39",
        "level": "a",
        "url": "https://egghead.io/lessons/react-development-environment-setup",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      },
      {
        "title": "Developer Tools",
        "description": "React Development Tools is a Chrome plugin that provides handy ways to inspect and debug your React components.",
        "duration": "4:14",
        "level": "i",
        "url": "https://egghead.io/lessons/developer-tools",
        "published_at": "20150213",
        "site" : "egghead",
        "site_url": "https://egghead.io",
        "image": "egghead.jpg",
        "lang": "en"
      }
    ]
  }
}
